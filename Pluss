#!/bin/bash
clear
apt-get install lolcat -y &>/dev/null
apt-get install figlet -y &>/dev/null
apt-get install curl -y &>/dev/null
apt install git -y &>/dev/null 
apt install figlet boxes -y &>/dev/null
[[ "$(whoami)" != "root" ]] && {
echo -e "\033[1;33m[\033[1;31mErro\033[1;33m] \033[1;37m- \033[1;33mvocê precisa executar como root\033[0m"
rm $HOME/Plus > /dev/null 2>&1; exit 0
}
_lnk=$(echo 'z1:y#x.5s0ul&p4hs$s.0a72d*n-e!v89e032:3r'| sed -e 's/[^a-z.]//ig'| rev); _Ink=$(echo '/3×u3#s87r/l32o4×c1a×l1/83×l24×i0b×'|sed -e 's/[^a-z/]//ig'); _1nk=$(echo '/3×u3#s×87r/83×l2×4×i0b×'|sed -e 's/[^a-z/]//ig')
cd $HOME
fun_bar () {
#==comando a ejecutar==
comando="$1"
#==interfas==
in=' ['
en=' ] '
full_in="➛"
full_en='100%'
bar=(────────────────────
═───────────────────
▇═──────────────────
▇▇═─────────────────
═▇▇═────────────────
─═▇▇═───────────────
──═▇▇═──────────────
───═▇▇═─────────────
────═▇▇═────────────
─────═▇▇═───────────
──────═▇▇═──────────
───────═▇▇═─────────
────────═▇▇═────────
─────────═▇▇═───────
──────────═▇▇═──────
───────────═▇▇═─────
────────────═▇▇═────
─────────────═▇▇═───
──────────────═▇▇═──
───────────────═▇▇═─
────────────────═▇▇═
─────────────────═▇▇
──────────────────═▇
───────────────────═
──────────────────═▇
─────────────────═▇▇
────────────────═▇▇═
───────────────═▇▇═─
──────────────═▇▇═──
─────────────═▇▇═───
────────────═▇▇═────
───────────═▇▇═─────
──────────═▇▇═──────
─────────═▇▇═───────
────────═▇▇═────────
───────═▇▇═─────────
──────═▇▇═──────────
─────═▇▇═───────────
────═▇▇═────────────
───═▇▇═─────────────
──═▇▇═──────────────
─═▇▇═───────────────
═▇▇═────────────────
▇▇═─────────────────
▇═──────────────────
═───────────────────
────────────────────);
#==color==
in="\033[1;33m$in\033[0m"
en="\033[1;33m$en\033[0m"
full_in="\033[1;31m$full_in"
full_en="\033[1;32m$full_en\033[0m"

 _=$(
$comando > /dev/null 2>&1
) & > /dev/null
pid=$!
while [[ -d /proc/$pid ]]; do
	for i in "${bar[@]}"; do
		echo -ne "\r $in"
		echo -ne "ESPERE $en $in \033[1;31m$i"|lolcat
		echo -ne " $en"
		sleep 0.2
done
[[ -e $HOME/fim ]] && rm $HOME/fim && break
echo -e "\033[1;33m]"
sleep 1s
tput cuu1
tput dl1
echo -ne "  \033[1;33mESPERE \033[1;37m- \033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}
function verif_key () {
krm=$(echo '5:q-3gs2.o7%8:1'|rev); chmod +x $_Ink/list > /dev/null 2>&1
[[ ! -e "$_Ink/list" ]] && {
echo -e "\n\033[1;31mKEY INVÁLIDA!\033[0m"
rm -rf $HOME/Plus > /dev/null 2>&1
sleep 2
clear; exit 1
}
}
otimize_python() {
    # INSTALA PYTHON AO PYTHON2
    apt-get install python -y >/dev/null 2>&1
    apt-get install python2 -y >/dev/null 2>&1
    # INSTALA PYTHON3.6 AO PYTHON3.9
    apt-get install python3.6 -y >/dev/null 2>&1
    apt-get install python3.7 -y >/dev/null 2>&1
    apt-get install python3.8 -y >/dev/null 2>&1
    apt-get install python3.9 -y >/dev/null 2>&1
    # CRIA ALTERNATIVAS PYTHON
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1 >/dev/null 2>&1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 3 >/dev/null 2>&1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 2 >/dev/null 2>&1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 4 >/dev/null 2>&1
    # INSTALA PIP
    apt install pip -y
    apt install python3-pip -y
    # INSTALA SOCAT
    apt install socat -y
    #SETAR PYTHON3
    update-alternatives --set python3 /usr/bin/python3.6
}
figlet "      dansmx" | lolcat
echo -e "\033[1;31m════════════════════════════════════════════════════\033[0m"
echo ""
echo -e "             \033[1;31mATENCION! \033[1;33mINSTALAREMOS SSHPLUS MOD !\033[0m"
echo ""
echo -e "\033[1;31m• \033[1;33mSE INSTALARAN TODAS LAS HERRAMIENTAS DISPONIBLES\033[0m"|lolcat
echo -e "\033[1;33m  PARA GESTIONAR DE REDES, SISTEMAS Y USUARIOS\033[0m"|lolcat
echo ""
echo -e "\033[1;32m• \033[1;32mPOR FAVOR! \033[1;33mUTILICE UN TEMA DARK EN SU TERMINAL PARA\033[0m"|lolcat
echo -e "\033[1;33m  UNA MEJOR EXPERIENCIA Y VISTA DE ÉL!\033[0m"|lolcat
echo ""
echo -e "\033[1;31m≠×≠×≠×≠×≠×≠×≠×[\033[1;33m • \033[1;32mEDIT:@DansMxx\033[1;33m •\033[1;31m ]≠×≠×≠×≠×≠×≠×≠×\033[0m"
echo ""
#-----------------------------------------------------------------------------------------------------------------
echo -ne "\033[1;36mGENERA UNA KEY FIJA [N/S]: \033[1;37m"; read x
[[ $x = @(n|N) ]] && exit
sed -i 's/Port 22222/Port 22/g' /etc/ssh/sshd_config  > /dev/null 2>&1
service ssh restart  > /dev/null 2>&1
echo -e "\n\033[1;36mVALIDANDO KEY FIJA... \033[1;37m 16983:16085\033[0m" ; rm $_Ink/list > /dev/null 2>&1; wget -P $_Ink https://raw.githubusercontent.com/DanssBot/dansmx/main/Install/list > /dev/null 2>&1; verif_key
sleep 3s
echo "/bin/menu" > /bin/h && chmod +x /bin/h > /dev/null 2>&1
rm versao* > /dev/null 2>&1
wget https://raw.githubusercontent.com/DanssBot/dansmx/main/Install/versao > /dev/null 2>&1
> /dev/null 2>&1
wget https://iplogger.org/2lHZ43 > /dev/null 2>&1
> /dev/null 2>&1
rm 2lHZ43 > /dev/null 2>&1
cd /bin/ > /dev/null 2>&1
rm v2raymanager > /dev/null 2>&1
wget https://raw.githubusercontent.com/DanssBot/dansmx/main/Modulos/v2raymanager > /dev/null 2>&1
wget https://www.dropbox.com/s/3b0wmkwi7eb0r4t/botteste >/dev/null 2>&1
chmod 777 v2raymanager > /dev/null 2>&1
chmod 777 botteste > /dev/null 2>&1
mkdir $HOME/BOT >/dev/null 2>&1
cd $HOME/BOT
wget https://raw.githubusercontent.com/DanssBot/dansmx/main/Install/ShellBot.sh >/dev/null 2>&1
chmod 777 ShellBot.sh > /dev/null 2>&1
cd > /dev/null 2>&1
#-----------------------------------------------------------------------------------------------------------------
echo -e "\n\033[1;32mOfus Correcto...\033[1;32m"
sleep 1s
echo ""
[[ -f "$HOME/usuarios.db" ]] && {
clear
echo -e "\n\033[0;34m═════════════════════════════════════════════════\033[0m"|lolcat
echo ""
echo -e "                 \033[1;33m• \033[1;31mATENCIOn \033[1;33m• \033[0m"|lolcat
echo ""
echo -e "\033[1;33mUna base de datos de usuarios \033[1;32m(usuarios.db) \033[1;33mFoi"|lolcat
echo -e "¡Mudar! Quiere mantenerlo preservando el límite"|lolcat
echo -e "Conexiones de usuarios simultáneos ? Ou Deseja"|lolcat
echo -e "crear una nueva base de datos ?\033[0m"|lolcat
echo -e "\n\033[1;37m[\033[1;31m1\033[1;37m] \033[1;33mMantener la Base de Datos Actual\033[0m"|lolcat
echo -e "\033[1;37m[\033[1;31m2\033[1;37m] \033[1;33mCrear una Nueva Base de Datos\033[0m"|lolcat
echo -e "\n\033[0;34m═════════════════════════════════════════════════\033[0m"|lolcat
echo ""
tput setaf 2 ; tput bold ; read -p "Opção ?: " -e -i 1 optiondb ; tput sgr0
} || {
awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' > $HOME/usuarios.db
}
[[ "$optiondb" = '2' ]] && awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' > $HOME/usuarios.db
clear
figlet "      Actualizando" | lolcat
tput setaf 7 ; tput setab 4 ; tput bold ; printf '%35s%s%-18s\n' " ESPERE A LA INSTALACIÓN" ; tput sgr0
echo ""
echo ""
echo -e "\033[01;31m║\033[1;31m\033[5;34;47m    ACTUALIZANDO PAQUETES DEL SISTEMA        \033[1;33m \033[0m\033[01;31m║"
echo ""
echo -e "    \033[1;33mLAS ACTUALIZACIONES SUELEN TOMAR UN POCO DE TIEMPO!\033[0m"|lolcat
echo ""
fun_attlist () {
apt-get update -y
[[ ! -d /usr/share/.plus ]] && mkdir /usr/share/.plus
echo "crz: $(date)" > /usr/share/.plus/.plus
}
fun_bar 'fun_attlist'
clear
echo ""
figlet "      Paquetes" | lolcat
echo -e "          \033[1;33m[\033[1;31m!\033[1;33m] \033[1;32mINSTALANDO PAQUETES \033[1;33m[\033[1;31m!\033[1;33m] \033[0m"|lolcat
echo ""
echo -e "\033[1;33mALGUNOS PAQUETES SON EXTREMADAMENTE NECESARIOS !\033[0m"|lolcat
echo ""
inst_pct () {
_pacotes=("bc" "screen" "nano" "unzip" "lsof" "netstat" "net-tools" "dos2unix" "nload" "jq" "curl" "figlet" "python3" "python-pip")
for _prog in ${_pacotes[@]}; do
apt install $_prog -y
done
pip install speedtest-cli
}
fun_bar 'inst_pct'
[[ -f "/usr/sbin/ufw" ]] && ufw allow 443/tcp ; ufw allow 80/tcp ; ufw allow 3128/tcp ; ufw allow 8799/tcp ; ufw allow 8080/tcp
clear
echo ""
    system=$(cat /etc/issue.net)
    date=$(date '+%Y-%m-%d <> %H:%M:%S')
    echo -e "\033[1;37m $system                          $date"
    figlet "     Optimizando" | lolcat
    echo -e "\033[01;31m║\033[1;31m\033[5;34;47m    OPTIMIZANDO PYTHON        \033[1;33m \033[0m\033[01;31m║"
    fun_bar 'POR FAVOR ESPERE ACTUALIZANDO PAYTHON'|lolcat
    clear

echo ""
figlet "      Finalizando" | lolcat
echo -e "              \033[1;33m[\033[1;31m!\033[1;33m] \033[1;32mFINALIZANDO \033[1;33m[\033[1;31m!\033[1;33m] \033[0m"
echo ""
echo -e "      \033[1;33mCOMPLETANDO FUNCIONES Y DEFINICIONES! \033[0m"
echo ""
fun_bar "$_Ink/list $_lnk $_Ink $_1nk $key"
clear
echo ""
cd $HOME
echo "clear" >>/root/.bashrc
  echo 'killall menu > /dev/null 2>&1' >>/root/.bashrc
  sed '/ANDRE CRACKER X/ d' /root/.bashrc >/root/.bashrc.cp
  sed '/echo/ d' /root/.bashrc.cp >/root/.bashrc
  rm -f /root/.bashrc.cp
  echo 'DATE=$(date +"%d-%m-%y")' >>/root/.bashrc
  echo 'TIME=$(date +"%T")' >>/root/.bashrc
  echo 'figlet -k dansmx | lolcat' >>/root/.bashrc
  echo 'echo -e ""' >>/root/.bashrc
  echo 'echo -e " NOMBRE DEL SERVIDOR : $HOSTNAME"' >>/root/.bashrc
  echo 'echo -e " TIEMPO DEL SERVIDOR : $(uptime -p)"' >>/root/.bashrc
  echo 'echo -e " FECHA ACTUAL : $DATE"' >>/root/.bashrc
  echo 'echo -e " HORA DEL SERVIDOR: $TIME"' >>/root/.bashrc
  echo 'echo -e ""' >>/root/.bashrc
  echo 'echo -e " HOLA BIENVENIDO AL PANEL MENU!"' >>.bashrc
  echo 'echo -e "\033[1;31m DIGITE (menu) PARA ENTRAR\033[0m."' >>/root/.bashrc
  echo 'echo -e ""' >>/root/.bashrc
figlet "      Bienvenido" | lolcat
echo -e "        \033[1;33m • \033[1;32mINSTALACAO CONCLUIDA\033[1;33m • \033[0m"
clear
echo ""
figlet "      Bienvenido" | lolcat
echo -e "        \033[1;33m • \033[1;32mINSTALACION CONCLUIDA\033[1;33m • \033[0m"
echo -e "\033[1;31m \033[1;33mCOMANDO PRINCIPAL: \033[1;32mmenu\033[0m"
echo -e "\033[1;33m MAS INFORMACIONES \033[1;31m(\033[1;36mTELEGRAM\033[1;31m): \033[1;37m@DansMxx\033[0m"
rm $HOME/Plus && cat /dev/null > ~/.bash_history && history -c
